(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/scripts/manager/ErrorCodeManager.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, 'd2afbMx37lBtJlY9gwSd4wW', 'ErrorCodeManager', __filename);
// scripts/manager/ErrorCodeManager.js

'use strict';

/**
 * Created by ZZTENG on 2017/06/14.
 **/
var KeyValueManager = require('KeyValueManager');
var EventManager = require('EventManager');
var tag_error_code = 'tag_error_code';
//用于debug的error_code
var LogErrorCode = { "1001": '\u6743\u9650\u4E0D\u8DB3', "1002": '\u672A\u5F00\u542F\u8BE5\u529F\u80FD', "1003": 'redis\u8BBF\u95EE\u5931\u8D25', "6001": '\u65E0\u6548\u7684auth_type', "6002": '\u65E0\u6548\u7684user_name', "6003": '\u5BC6\u7801\u9519\u8BEF', "6004": '\u65E0\u6548\u7684refresh_token', "8001": '\u95EA\u7535\u73A9\u767B\u5F55\u5931\u8D25', "10001": '\u4E0D\u5B58\u5728\u8BE5id\u73A9\u5BB6\u7684\u4FE1\u606F', "10002": '\u672A\u53D1\u9001user_id', "10003": '\u672A\u53D1\u9001session_key', "10004": 'user_id\u6216session_key\u65E0\u6548', "10005": '\u672A\u77E5\u7684\u767B\u5F55\u9519\u8BEF', "10006": '\u521B\u5EFA\u89D2\u8272\u5931\u8D25', "10007": '\u521B\u5EFA\u89D2\u8272\u5931\u8D25', "10008": '\u63D0\u4EA4\u53C2\u6570\u9519\u8BEF', "10009": 'channel\u53C2\u6570\u65E0\u6548', "11000": '\u7591\u4F3C\u4F5C\u5F0A', "10010": '\u4ED6\u4EBA\u767B\u5F55', "11111": 'csv\u6570\u636E\u4E0D\u4E00\u81F4', "11112": '\u53C2\u6570\u91CD\u590D', "20001": '\u9053\u5177\u6570\u91CF\u4E0D\u8DB3', "20003": '\u8BE5\u540D\u5B57\u5DF2\u88AB\u5360\u7528', "20004": '\u540D\u5B57\u4FEE\u6539\u524D\u540E\u76F8\u540C', "20005": '\u5305\u542B\u654F\u611F\u8BCD', "21001": '\u5546\u54C1\u8D2D\u4E70\u6570\u91CF\u5FC5\u987B\u5927\u4E8E1', "21002": '\u652F\u4ED8\u6E20\u9053\u9519\u8BEF', "21003": '\u7F3A\u5C11\u5173\u5361ID,\u6216\u5546\u54C1ID\u65E0\u6548', "21004": '\u5DF2\u5F00\u542F\u8FC7\u8BE5\u5B9D\u7BB1', "21005": '\u672A\u8FBE\u6210\u6761\u4EF6', "21006": '\u5DF2\u9886\u53D6\u8BE5\u65E5\u8BB0\u5956\u52B1', "21007": '\u5DF2\u9886\u53D6\u8BE5\u6536\u85CF\u54C1\u5168\u90E8\u5956\u52B1', "21008": '\u4E0D\u5728\u4FC3\u9500\u65F6\u95F4\u6BB5\u5185', "21009": '\u8D85\u8FC7\u8D2D\u4E70\u6570\u91CF\u4E0A\u9650', "21010": '\u4E0D\u5B58\u5728\u8BE5\u4E3B\u9898', "21012": '\u5DF2\u9886\u53D6\u8FC7\u63A8\u8350\u76AE\u80A4', "21013": '\u4E0D\u80FD\u8D2D\u4E70\u5C0F\u4F53\u529B\u74F6', "21014": '\u5DF2\u62E5\u6709\u8BE5\u4F53\u529B\u74F6,', "21015": '\u8D2D\u4E70\u4F53\u529B\u74F6\u7684\u6570\u91CF\u4E0D\u80FD\u8D85\u8FC71', "21016": 'vip\u7B49\u7EA7\u4E0D\u8DB3,', "21017": '\u5F53\u65E510\u8FDE\u6B21\u6570\u5DF2\u7528\u5B8C', "30001": '\u4F53\u529B\u4E0D\u8DB3', "30002": '\u9053\u5177,\u5206\u6570\u6216\u661F\u7EA7\u65E0\u6548', "30003": '\u4E0D\u5141\u8BB8\u4F7F\u7528\u8BE5\u9053\u5177', "30004": '\u65E0\u6CD5\u6253\u5F00\u8BE5\u5730\u56FE', "30005": '\u9053\u5177\u4F7F\u7528\u6570\u91CF\u8D85\u8FC7\u4E0A\u9650', "30006": '\u590D\u6D3B\u6B21\u6570\u4E0D\u8DB3', "30007": '\u672A\u901A\u5173\u4EFB\u4F55\u5173\u5361', "30008": '\u65E0\u6CD5\u5E2E\u52A9\u597D\u53CB\u89E3\u9501\u5173\u5361', "30009": '\u4E0D\u6EE1\u8DB3\u89E3\u9501\u7AE0\u8282\u7684\u524D\u7F6E\u6761\u4EF6', "30010": '\u5DF2\u8D85\u65F6,', "30011": '\u5206\u6570\u8FC7\u4F4E', "30012": '\u5206\u6570\u8FC7\u9AD8', "30013": '\u83B7\u5F97\u91D1\u5E01\u6570\u91CF\u4E0D\u7B26', "30014": '\u9F13\u52B1\u91D1\u5E01\u8FC7\u4F4E', "30015": '\u9F13\u52B1\u91D1\u5E01\u8FC7\u9AD8', "40001": '\u5DF2\u62E5\u6709\u8BE5\u88C5\u626E', "40002": '\u672A\u62E5\u6709\u8BE5\u88C5\u626E', "40003": '\u5DF2\u6EE1\u7EA7', "40005": '\u65E0\u6548\u7684id', "40006": '\u9644\u9B54\u4E2D\u6D88\u8017\u4E0E\u83B7\u5F97\u4E0D\u80FD\u76F8\u540C', "60001": '\u5237\u65B0\u6B21\u6570\u8D85\u8FC7\u4E0A\u9650', "60002": '\u65E0\u6CD5\u53D6\u5F97\u65B0\u7684\u4EFB\u52A1', "60003": '\u5DF2\u9886\u53D6\u8BE5\u65E5\u5E38\u4EFB\u52A1\u5956\u52B1', "60004": '\u5DF2\u9886\u53D6\u8BE5\u9636\u6BB5\u6D3B\u8DC3\u5EA6\u5B9D\u7BB1', "40004": '\u65E0\u6548\u7684type', "60005": '\u6BCF\u65E5\u4EFB\u52A1\u6D3B\u8DC3\u5EA6\u4E0D\u8DB3', "60006": 'index\u8D85\u51FA\u8303\u56F4', "60007": '\u672A\u8FBE\u6210\u4EFB\u52A1\u6761\u4EF6', "60008": '\u4E0D\u5B58\u5728\u8BE5\u4EFB\u52A1', "60009": '\u672A\u8FBE\u5230\u4EFB\u52A1\u8981\u6C42\u5206\u6570', "60010": '\u672A\u53D6\u5F97\u4EFB\u4F55\u4EFB\u52A1', "70001": '\u672A\u627E\u5230\u8BE5\u597D\u53CB\u7684\u6570\u636E', "70002": '\u4E0D\u80FD\u6DFB\u52A0\u81EA\u5DF1\u4E3A\u597D\u53CB', "70003": '\u5DF2\u662F\u597D\u53CB\u5173\u7CFB', "70016": '\u4E0D\u662F\u597D\u53CB\u5173\u7CFB', "72001": '\u8BB8\u613F\u5355\u6570\u76EE\u8D85\u8FC7\u4E0A\u9650', "72002": '\u8DDD\u79BB\u4E0A\u6B21\u53D1\u5E03\u65F6\u95F4\u8FC7\u8FD1', "72003": '\u65E0\u6548\u7684item_id', "72004": '\u5DF2\u7ED9\u8FC7\u8BE5\u9053\u5177', "73001": '\u4E0D\u662F\u597D\u53CB\u5173\u7CFB,\u65E0\u6CD5\u6267\u884C\u8BE5\u64CD\u4F5C', "73002": '\u53CB\u597D\u5EA6\u4E0D\u8DB3', "73003": '\u597D\u53CB\u4E0D\u80FD\u8FDB\u884C\u6B64\u5173\u5361\u6E38\u620F', "75001": '\u672A\u7ED9\u4E88\u4F53\u529B,\u65E0\u6CD5\u7D22\u8981', "75002": '\u65E0\u6CD5\u7D22\u8981', "75003": '\u9886\u53D6\u4F53\u529B\u6570\u91CF\u5DF2\u7ECF\u8FBE\u5230\u4E0A\u9650', "76001": '\u597D\u53CB\u672A\u89E3\u9501\u8BE5\u7AE0\u8282', "76002": '\u8BE5\u597D\u53CB\u5DF2\u5E2E\u52A9\u89E3\u9501\u8BE5\u533A\u57DF', "76003": '\u672A\u8FBE\u6210\u89E3\u9501\u8BE5\u533A\u57DF\u7684\u524D\u7F6E\u5173\u5361', "77001": '\u5F53\u524D\u72B6\u6001\u4E0D\u5141\u8BB8\u5339\u914D', "77002": '\u670D\u52A1\u5668\u7E41\u5FD9,', "77003": '\u6E38\u620F\u8FDB\u884C\u4E2D', "77004": '\u73A9\u5BB6\u4E0D\u5728\u6E38\u620F\u623F\u95F4\u5185', "77005": '\u6E38\u620F\u672A\u5F00\u59CB', "77006": '\u73A9\u5BB6pos\u548Cid\u4E0D\u4E00\u81F4,', "77007": '\u672A\u5230\u7ED3\u7B97\u65F6\u95F4', "80001": '\u6C14\u7403\u5956\u52B1\u65E0\u6548', "80002": '\u672A\u53D1\u9001\u8FDB\u5165\u5C0F\u6E38\u620F\u534F\u8BAE', "80003": '\u83B7\u5F97\u5956\u52B1\u6570\u91CF\u4E0D\u5339\u914D', "90001": '\u4E0D\u5B58\u5728\u8BE5\u90AE\u4EF6', "90002": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u597D\u53CB\u90AE\u4EF6', "90003": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u7CFB\u7EDF\u90AE\u4EF6', "90004": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u65B0\u90AE\u4EF6', "90005": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u7CFB\u7EDF\u5956\u52B1\u90AE\u4EF6', "90006": '\u672A\u89E3\u9501\u8BE5\u533A\u57DF,\u65E0\u6CD5\u5E2E\u52A9\u597D\u53CB\u89E3\u9501', "91001": '\u8BE5\u73A9\u5BB6\u5DF2\u52A0\u5165\u53E6\u4E00\u961F\u4F0D', "91002": '\u672A\u52A0\u5165\u4EFB\u4F55\u961F\u4F0D', "91003": '\u4E0D\u5B58\u5728\u6B64\u961F\u4F0D', "91004": '\u4E0D\u662F\u961F\u957F,\u6743\u9650\u4E0D\u8DB3', "91005": '\u8BE5\u73A9\u5BB6\u4E0D\u5C5E\u4E8E\u6B64\u961F\u4F0D', "91006": '\u8BE5\u73A9\u5BB6\u672A\u7533\u8BF7\u52A0\u5165', "91007": '\u961F\u4F0D\u4EBA\u6570\u8D85\u8FC7\u4E0A\u9650', "91008": '\u8BE5\u73A9\u5BB6\u5DF2\u7ECF\u5728\u961F\u4F0D\u5185', "91009": '\u4E0D\u5728\u9080\u8BF7\u5217\u8868\u5185', "91010": '\u5DF2\u5B58\u5728\u8BE5\u6218\u961F\u540D', "91011": '\u961F\u4F0D\u4EBA\u6570\u4E0D\u8DB3', "91012": '\u961F\u53CB\u672A\u4E0A\u7EBF', "91013": '\u9080\u8BF7\u5DF2\u5931\u6548', "91019": '\u73A9\u5BB6\u4E0D\u5728\u7EBF,', "92001": '\u4E0D\u5B58\u5728\u8BE5\u6E38\u620F\u623F\u95F4', "92002": '\u623F\u95F4\u5DF2\u6EE1\u5458', "92003": '\u5DF2\u9000\u51FA\u623F\u95F4', "92004": '\u672A\u5728\u623F\u95F4\u5185\u627E\u5230\u8BE5\u73A9\u5BB6\u4FE1\u606F', "92005": '\u8BE5\u961F\u4F0D\u4EBA\u6570\u5DF2\u8FBE\u5230\u4E0A\u9650', "92006": '\u4E0D\u5B58\u5728\u8BE5\u961F\u4F0D', "92007": '\u8BE5\u6A21\u5F0F\u4E0B\u4E0D\u5141\u8BB8\u6539\u53D8\u961F\u4F0D', "92008": '\u5DF2\u5728\u67D0\u623F\u95F4\u5185,', "92009": '\u73A9\u5BB6\u4E0D\u5728\u8BE5\u9635\u8425', "92010": '\u8BE5\u623F\u95F4\u4E0D\u53EF\u8FDB\u5165', "92011": '\u8BE5\u623F\u95F4\u6B63\u5728\u6E38\u620F\u4E2D', "92012": '\u9635\u8425\u4E0D\u7B26', "92013": '\u8BE5\u623F\u95F4\u4E0D\u53EF\u89C2\u6218', "92014": '\u8BE5\u623F\u95F4\u672A\u5F00\u59CB\u6E38\u620F', "92015": '\u4E0D\u80FD\u5728\u4E00\u4E2A\u961F\u4F0D\u5185', "93001": '\u6B63\u5728\u6E38\u620F\u4E2D', "93002": '\u73A9\u5BB6\u672A\u5F00\u59CB\u5339\u914D\u6216\u5DF2\u53D6\u6D88\u5339\u914D', "93003": '\u6B63\u5728\u5339\u914D\u4E2D', "93004": '\u73A9\u5BB6\u5DF2\u7ECF\u6B7B\u4EA1', "93010": '\u672A\u53C2\u4E0E\u8BE5\u573A\u6B21', "93011": '\u4E3B\u52A8\u9000\u51FA\u6E38\u620F\u623F\u95F4,', "93012": '\u961F\u53CB\u6B63\u5728\u5339\u914D\u4E2D', "93013": '\u5F53\u524D\u573A\u6B21\u5DF2\u5F00\u8D5B,', "93014": '\u8BE5\u573A\u6B21\u5DF2\u7ED3\u675F.', "94001": '\u975E\u653B\u51FB\u6A21\u5F0F' };
//用于客户端的提示的
var ShowErrorCode = { "8001": '\u95EA\u7535\u73A9\u767B\u5F55\u5931\u8D25', "20001": '\u9053\u5177\u6570\u91CF\u4E0D\u8DB3', "20003": '\u8BE5\u540D\u5B57\u5DF2\u88AB\u5360\u7528', "20004": '\u540D\u5B57\u4FEE\u6539\u524D\u540E\u76F8\u540C', "20005": '\u5305\u542B\u654F\u611F\u8BCD', "21001": '\u5546\u54C1\u8D2D\u4E70\u6570\u91CF\u5FC5\u987B\u5927\u4E8E1', "21002": '\u652F\u4ED8\u6E20\u9053\u9519\u8BEF', "21003": '\u7F3A\u5C11\u5173\u5361ID,\u6216\u5546\u54C1ID\u65E0\u6548', "21004": '\u5DF2\u5F00\u542F\u8FC7\u8BE5\u5B9D\u7BB1', "21005": '\u672A\u8FBE\u6210\u6761\u4EF6', "21006": '\u5DF2\u9886\u53D6\u8BE5\u65E5\u8BB0\u5956\u52B1', "21007": '\u5DF2\u9886\u53D6\u8BE5\u6536\u85CF\u54C1\u5168\u90E8\u5956\u52B1', "21008": '\u4E0D\u5728\u4FC3\u9500\u65F6\u95F4\u6BB5\u5185', "21009": '\u8D85\u8FC7\u8D2D\u4E70\u6570\u91CF\u4E0A\u9650', "21010": '\u4E0D\u5B58\u5728\u8BE5\u4E3B\u9898', "21012": '\u5DF2\u9886\u53D6\u8FC7\u63A8\u8350\u76AE\u80A4', "21013": '\u4E0D\u80FD\u8D2D\u4E70\u5C0F\u4F53\u529B\u74F6', "21014": '\u5DF2\u62E5\u6709\u8BE5\u4F53\u529B\u74F6,', "21015": '\u8D2D\u4E70\u4F53\u529B\u74F6\u7684\u6570\u91CF\u4E0D\u80FD\u8D85\u8FC71', "21016": 'vip\u7B49\u7EA7\u4E0D\u8DB3,', "21017": '\u5F53\u65E510\u8FDE\u6B21\u6570\u5DF2\u7528\u5B8C', "30001": '\u4F53\u529B\u4E0D\u8DB3', "30002": '\u9053\u5177,\u5206\u6570\u6216\u661F\u7EA7\u65E0\u6548', "30003": '\u4E0D\u5141\u8BB8\u4F7F\u7528\u8BE5\u9053\u5177', "30004": '\u65E0\u6CD5\u6253\u5F00\u8BE5\u5730\u56FE', "30005": '\u9053\u5177\u4F7F\u7528\u6570\u91CF\u8D85\u8FC7\u4E0A\u9650', "30006": '\u590D\u6D3B\u6B21\u6570\u4E0D\u8DB3', "30007": '\u672A\u901A\u5173\u4EFB\u4F55\u5173\u5361', "30008": '\u65E0\u6CD5\u5E2E\u52A9\u597D\u53CB\u89E3\u9501\u5173\u5361', "30009": '\u4E0D\u6EE1\u8DB3\u89E3\u9501\u7AE0\u8282\u7684\u524D\u7F6E\u6761\u4EF6', "30010": '\u5DF2\u8D85\u65F6,', "30011": '\u5206\u6570\u8FC7\u4F4E', "30012": '\u5206\u6570\u8FC7\u9AD8', "30013": '\u83B7\u5F97\u91D1\u5E01\u6570\u91CF\u4E0D\u7B26', "30014": '\u9F13\u52B1\u91D1\u5E01\u8FC7\u4F4E', "30015": '\u9F13\u52B1\u91D1\u5E01\u8FC7\u9AD8', "40001": '\u5DF2\u62E5\u6709\u8BE5\u88C5\u626E', "40002": '\u672A\u62E5\u6709\u8BE5\u88C5\u626E', "40003": '\u5DF2\u6EE1\u7EA7', "40005": '\u65E0\u6548\u7684id', "40006": '\u9644\u9B54\u4E2D\u6D88\u8017\u4E0E\u83B7\u5F97\u4E0D\u80FD\u76F8\u540C', "60001": '\u5237\u65B0\u6B21\u6570\u8D85\u8FC7\u4E0A\u9650', "60002": '\u65E0\u6CD5\u53D6\u5F97\u65B0\u7684\u4EFB\u52A1', "60003": '\u5DF2\u9886\u53D6\u8BE5\u65E5\u5E38\u4EFB\u52A1\u5956\u52B1', "60004": '\u5DF2\u9886\u53D6\u8BE5\u9636\u6BB5\u6D3B\u8DC3\u5EA6\u5B9D\u7BB1', "40004": '\u65E0\u6548\u7684type', "60005": '\u6BCF\u65E5\u4EFB\u52A1\u6D3B\u8DC3\u5EA6\u4E0D\u8DB3', "60006": 'index\u8D85\u51FA\u8303\u56F4', "60007": '\u672A\u8FBE\u6210\u4EFB\u52A1\u6761\u4EF6', "60008": '\u4E0D\u5B58\u5728\u8BE5\u4EFB\u52A1', "60009": '\u672A\u8FBE\u5230\u4EFB\u52A1\u8981\u6C42\u5206\u6570', "60010": '\u672A\u53D6\u5F97\u4EFB\u4F55\u4EFB\u52A1', "70001": '\u672A\u627E\u5230\u8BE5\u597D\u53CB\u7684\u6570\u636E', "70002": '\u4E0D\u80FD\u6DFB\u52A0\u81EA\u5DF1\u4E3A\u597D\u53CB', "70003": '\u5DF2\u662F\u597D\u53CB\u5173\u7CFB', "70016": '\u4E0D\u662F\u597D\u53CB\u5173\u7CFB', "72001": '\u8BB8\u613F\u5355\u6570\u76EE\u8D85\u8FC7\u4E0A\u9650', "72002": '\u8DDD\u79BB\u4E0A\u6B21\u53D1\u5E03\u65F6\u95F4\u8FC7\u8FD1', "72003": '\u65E0\u6548\u7684item_id', "72004": '\u5DF2\u7ED9\u8FC7\u8BE5\u9053\u5177', "73001": '\u4E0D\u662F\u597D\u53CB\u5173\u7CFB,\u65E0\u6CD5\u6267\u884C\u8BE5\u64CD\u4F5C', "73002": '\u53CB\u597D\u5EA6\u4E0D\u8DB3', "73003": '\u597D\u53CB\u4E0D\u80FD\u8FDB\u884C\u6B64\u5173\u5361\u6E38\u620F', "75001": '\u672A\u7ED9\u4E88\u4F53\u529B,\u65E0\u6CD5\u7D22\u8981', "75002": '\u65E0\u6CD5\u7D22\u8981', "75003": '\u9886\u53D6\u4F53\u529B\u6570\u91CF\u5DF2\u7ECF\u8FBE\u5230\u4E0A\u9650', "76001": '\u597D\u53CB\u672A\u89E3\u9501\u8BE5\u7AE0\u8282', "76002": '\u8BE5\u597D\u53CB\u5DF2\u5E2E\u52A9\u89E3\u9501\u8BE5\u533A\u57DF', "76003": '\u672A\u8FBE\u6210\u89E3\u9501\u8BE5\u533A\u57DF\u7684\u524D\u7F6E\u5173\u5361', "77001": '\u5F53\u524D\u72B6\u6001\u4E0D\u5141\u8BB8\u5339\u914D', "77002": '\u670D\u52A1\u5668\u7E41\u5FD9,', "77003": '\u6E38\u620F\u8FDB\u884C\u4E2D', "77004": '\u73A9\u5BB6\u4E0D\u5728\u6E38\u620F\u623F\u95F4\u5185', "77005": '\u6E38\u620F\u672A\u5F00\u59CB', "77006": '\u73A9\u5BB6pos\u548Cid\u4E0D\u4E00\u81F4,', "77007": '\u672A\u5230\u7ED3\u7B97\u65F6\u95F4', "80001": '\u6C14\u7403\u5956\u52B1\u65E0\u6548', "80002": '\u672A\u53D1\u9001\u8FDB\u5165\u5C0F\u6E38\u620F\u534F\u8BAE', "80003": '\u83B7\u5F97\u5956\u52B1\u6570\u91CF\u4E0D\u5339\u914D', "90001": '\u4E0D\u5B58\u5728\u8BE5\u90AE\u4EF6', "90002": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u597D\u53CB\u90AE\u4EF6', "90003": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u7CFB\u7EDF\u90AE\u4EF6', "90004": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u65B0\u90AE\u4EF6', "90005": '\u8BE5\u90AE\u4EF6\u4E0D\u5C5E\u4E8E\u7CFB\u7EDF\u5956\u52B1\u90AE\u4EF6', "90006": '\u672A\u89E3\u9501\u8BE5\u533A\u57DF,\u65E0\u6CD5\u5E2E\u52A9\u597D\u53CB\u89E3\u9501', "91001": '\u8BE5\u73A9\u5BB6\u5DF2\u52A0\u5165\u53E6\u4E00\u961F\u4F0D', "91002": '\u672A\u52A0\u5165\u4EFB\u4F55\u961F\u4F0D', "91003": '\u4E0D\u5B58\u5728\u6B64\u961F\u4F0D', "91004": '\u4E0D\u662F\u961F\u957F,\u6743\u9650\u4E0D\u8DB3', "91005": '\u8BE5\u73A9\u5BB6\u4E0D\u5C5E\u4E8E\u6B64\u961F\u4F0D', "91006": '\u8BE5\u73A9\u5BB6\u672A\u7533\u8BF7\u52A0\u5165', "91007": '\u961F\u4F0D\u4EBA\u6570\u8D85\u8FC7\u4E0A\u9650', "91008": '\u8BE5\u73A9\u5BB6\u5DF2\u7ECF\u5728\u961F\u4F0D\u5185', "91009": '\u4E0D\u5728\u9080\u8BF7\u5217\u8868\u5185', "91010": '\u5DF2\u5B58\u5728\u8BE5\u6218\u961F\u540D', "91011": '\u961F\u4F0D\u4EBA\u6570\u4E0D\u8DB3', "91012": '\u961F\u53CB\u672A\u4E0A\u7EBF', "91013": '\u9080\u8BF7\u5DF2\u5931\u6548', "91019": '\u73A9\u5BB6\u4E0D\u5728\u7EBF,', "91021": '\u8D26\u53F7\u4E0D\u6B63\u786E', "92001": '\u4E0D\u5B58\u5728\u8BE5\u6E38\u620F\u623F\u95F4', "92002": '\u623F\u95F4\u5DF2\u6EE1\u5458', "92003": '\u5DF2\u9000\u51FA\u623F\u95F4', "92004": '\u672A\u5728\u623F\u95F4\u5185\u627E\u5230\u8BE5\u73A9\u5BB6\u4FE1\u606F', "92005": '\u8BE5\u961F\u4F0D\u4EBA\u6570\u5DF2\u8FBE\u5230\u4E0A\u9650', "92006": '\u4E0D\u5B58\u5728\u8BE5\u961F\u4F0D', "92007": '\u8BE5\u6A21\u5F0F\u4E0B\u4E0D\u5141\u8BB8\u6539\u53D8\u961F\u4F0D', "92008": '\u5DF2\u5728\u67D0\u623F\u95F4\u5185,', "92009": '\u73A9\u5BB6\u4E0D\u5728\u8BE5\u9635\u8425', "92010": '\u8BE5\u623F\u95F4\u4E0D\u53EF\u8FDB\u5165', "92011": '\u8BE5\u623F\u95F4\u6B63\u5728\u6E38\u620F\u4E2D', "92012": '\u9635\u8425\u4E0D\u7B26', "92013": '\u8BE5\u623F\u95F4\u4E0D\u53EF\u89C2\u6218', "92014": '\u8BE5\u623F\u95F4\u672A\u5F00\u59CB\u6E38\u620F', "93001": '\u6B63\u5728\u6E38\u620F\u4E2D', "93002": '\u73A9\u5BB6\u672A\u5F00\u59CB\u5339\u914D\u6216\u5DF2\u53D6\u6D88\u5339\u914D', "92015": '\u4E0D\u80FD\u5728\u4E00\u4E2A\u961F\u4F0D\u5185', "93003": '\u6B63\u5728\u5339\u914D\u4E2D', "93004": '\u73A9\u5BB6\u5DF2\u7ECF\u6B7B\u4EA1', "93010": '\u672A\u53C2\u4E0E\u8BE5\u573A\u6B21', "93011": '\u4E3B\u52A8\u9000\u51FA\u6E38\u620F\u623F\u95F4,', "93012": '\u961F\u53CB\u6B63\u5728\u5339\u914D\u4E2D', "93013": '\u5F53\u524D\u573A\u6B21\u5DF2\u5F00\u8D5B,', "93014": '\u8BE5\u573A\u6B21\u5DF2\u7ED3\u675F.', "94001": '\u975E\u653B\u51FB\u6A21\u5F0F', "95002": '\u5DF2\u7ECF\u9886\u53D6\u8FC7\u5956\u52B1' };
//用于逻辑处理
var LogicErrorCode = {};
var ErroCodeManager = {
    handle_error_code: function handle_error_code(error) {
        //log(debug)
        if (LogErrorCode[error]) {
            cc.log(tag_error_code, error, LogErrorCode[error]);
        }
        //tips(UI)
        if (ShowErrorCode[error]) {
            KeyValueManager['msg_text'] = ShowErrorCode[error];
            EventManager.pushEvent({ 'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer': false });
        }
        //UI handle
        // switch (error_code){
        //     case 6002: {
        //         KeyValueManager['msg_text'] ='无效的用户';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //     break;
        //     case 6003: {
        //         KeyValueManager['msg_text'] ='密码错误';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //     break;
        //     case 6004: {
        //         cc.log(tag_error_code,error_code,'无效的refresh_token');
        //     }
        //     break;
        //     case 8001: {
        //         KeyValueManager['msg_text'] ='密码错误';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //     break;
        //     case 10001: {
        //         cc.log(tag_error_code,error_code,'不存在该id玩家的信息');
        //     }
        //     break;
        //     case 10002: {
        //         cc.log(tag_error_code,error_code,'未发送user_id');
        //     }
        //     break;
        //     case 10003: {
        //         cc.log(tag_error_code,error_code,'未发送session_key');;
        //     }
        //     break;
        //     case 10004: {
        //         cc.log(tag_error_code,error_code,'user_id或session_key无效');
        //     }
        //     break;
        //     case 10005: {
        //         cc.log(tag_error_code,error_code,'未知的登录错误');
        //     }
        //         break;
        //     case 10006: {
        //         cc.log(tag_error_code,error_code,'创建角色失败');
        //     }
        //         break;
        //     case 10007: {
        //         cc.log(tag_error_code,error_code,'创建角色失败');
        //     }
        //         break;
        //     case 10008: {
        //         cc.log(tag_error_code,error_code,'提交参数错误');
        //     }
        //         break;
        //     case 10009: {
        //         cc.log(tag_error_code,error_code,'channel参数无效');
        //     }
        //         break;
        //     case 11000: {
        //         cc.log(tag_error_code,error_code,'疑似作弊');
        //     }
        //         break;
        //     case 10010: {
        //         cc.log(tag_error_code,error_code,'他人登录');      //做异常登录处理
        //     }
        //         break;
        //     case 11111: {
        //         cc.log(tag_error_code,error_code,'csv数据不一致');
        //     }
        //         break;
        //     case 11112: {
        //         cc.log(tag_error_code,error_code,'参数重复');
        //     }
        //     break;
        //     case 20001: {
        //         KeyValueManager['msg_text'] ='道具数量不足';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //     break;
        //     case 20003: {
        //         KeyValueManager['msg_text'] ='该名字已被占用';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 20004: {
        //         KeyValueManager['msg_text'] ='名字修改前后相同';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 20005: {
        //         KeyValueManager['msg_text'] ='包含敏感词';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21001: {
        //         KeyValueManager['msg_text'] ='商品购买数量必须大于1';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21001: {
        //         KeyValueManager['msg_text'] ='商品购买数量必须大于1';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21002: {
        //         cc.log(tag_error_code,error_code,'支付渠道错误');
        //     }
        //         break;
        //     case 21003: {
        //         cc.log(tag_error_code,error_code,'缺少关卡ID,或商品ID无效');
        //     }
        //         break;
        //     case 21004: {
        //         KeyValueManager['msg_text'] ='已开启过该宝箱';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21005: {
        //         KeyValueManager['msg_text'] ='未达成条件';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21006: {
        //         KeyValueManager['msg_text'] ='已领取该日记奖励';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21007: {
        //         KeyValueManager['msg_text'] ='已领取该收藏品全部奖励';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21008: {
        //         KeyValueManager['msg_text'] ='不在促销时间段内';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21009: {
        //         KeyValueManager['msg_text'] ='超过购买数量上限';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21010: {
        //         KeyValueManager['msg_text'] ='不存在该主题';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21012: {
        //         KeyValueManager['msg_text'] ='已领取过推荐皮肤';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21013: {
        //         KeyValueManager['msg_text'] ='不能购买小体力瓶';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21014: {
        //         KeyValueManager['msg_text'] ='已拥有该体力瓶, 不能购买';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21015: {
        //         KeyValueManager['msg_text'] ='购买体力瓶的数量不能超过1';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21016: {
        //         KeyValueManager['msg_text'] ='vip等级不足, 不能购买金币';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 21017: {
        //         KeyValueManager['msg_text'] ='当日10连次数已用完';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30001: {
        //         KeyValueManager['msg_text'] ='体力不足';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30002: {
        //         cc.log(tag_error_code,error_code,'道具,分数或星级无效');
        //     }
        //         break;
        //     case 30003: {
        //         KeyValueManager['msg_text'] ='不允许使用该道具';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30004: {
        //         KeyValueManager['msg_text'] ='无法打开该地图';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30005: {
        //         KeyValueManager['msg_text'] ='道具使用数量超过上限';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30006: {
        //         KeyValueManager['msg_text'] ='复活次数不足';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30007: {
        //         KeyValueManager['msg_text'] ='未通关任何关卡';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30008: {
        //         KeyValueManager['msg_text'] ='无法帮助好友解锁关卡';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30009: {
        //         KeyValueManager['msg_text'] ='不满足解锁章节的前置条件';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30010: {
        //         KeyValueManager['msg_text'] ='已超时, 请重新进入关卡';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30011: {
        //         KeyValueManager['msg_text'] ='分数过低';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30012: {
        //         KeyValueManager['msg_text'] ='分数过高';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30013: {
        //         cc.log(tag_error_code,error_code,'获得金币数量不符');
        //     }
        //         break;
        //     case 30014: {
        //         KeyValueManager['msg_text'] ='鼓励金币过低';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 30014: {
        //         KeyValueManager['msg_text'] ='鼓励金币过高';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 40001: {
        //         KeyValueManager['msg_text'] ='已拥有该装扮';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 40002: {
        //         KeyValueManager['msg_text'] ='未拥有该装扮';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 40003: {
        //         KeyValueManager['msg_text'] ='已满级';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 40004: {
        //         cc.log(tag_error_code,error_code,'无效的type');
        //     }
        //         break;
        //     case 40005: {
        //         cc.log(tag_error_code,error_code,'无效的id');
        //     }
        //         break;
        //     case 40006: {
        //         cc.log(tag_error_code,error_code,'附魔中消耗与获得不能相同');
        //     }
        //         break;
        //     case 60001: {
        //         KeyValueManager['msg_text'] ='刷新次数超过上限';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 60002: {
        //         KeyValueManager['msg_text'] ='无法取得新的任务';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 60003: {
        //         KeyValueManager['msg_text'] ='已领取该日常任务奖励';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 60004: {
        //         KeyValueManager['msg_text'] ='已领取该阶段活跃度宝箱';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 60005: {
        //         KeyValueManager['msg_text'] ='每日任务活跃度不足';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        //     case 60006: {
        //         cc.log(tag_error_code,error_code,'index超出范围');
        //     }
        //         break;
        //     case 60007: {
        //         cc.log(tag_error_code,error_code,'未达成任务条件');
        //     }
        //         break;
        //     case 60008: {
        //         cc.log(tag_error_code,error_code,'不存在该任务');
        //     }
        //         break;
        //     case 60009: {
        //         KeyValueManager['msg_text'] ='未达到任务要求分数';
        //         EventManager.pushEvent({'msg_id': 'OPEN_LAYER', 'layer_id': 'msg_layer', 'hide_preLayer':false});
        //     }
        //         break;
        // }
    }
    // called every frame, uncomment this function to activate update callback
    // update: function (dt) {

    // },
};
module.exports = ErroCodeManager;

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=ErrorCodeManager.js.map
        